import { Request, Response, NextFunction } from 'express';

const JWT_SECRET = process.env.JWT_SECRET || 'your_jwt_secret_key';

// M·ªü r·ªông Request ƒë·ªÉ bao g·ªìm user
export interface AuthRequest extends Request {
  user?: {
    id: string;
    email?: string;
    username?: string;
    role: 'admin' | 'telesale';
    [key: string]: any;
  };
}


// üîí Ch·ªâ cho ph√©p Admin
export const authorizeAdmin = (req: AuthRequest, res: Response, next: NextFunction): void => {
  if (req.user?.role !== 'admin') {
    res.status(403).json({ message: 'Quy·ªÅn truy c·∫≠p b·ªã t·ª´ ch·ªëi. C·∫ßn quy·ªÅn admin.' });
    return; // ch·ªâ return ƒë·ªÉ d·ª´ng h√†m, kh√¥ng tr·∫£ v·ªÅ Response
  }
  next();
};

// Ch·ªâ telesale
export const authorizeTelesale = (req: AuthRequest, res: Response, next: NextFunction): void => {
  if (req.user?.role !== 'telesale') {
    res.status(403).json({ message: 'Quy·ªÅn truy c·∫≠p b·ªã t·ª´ ch·ªëi. C·∫ßn quy·ªÅn telesale.' });
    return;
  }
  next();
};

// Cho ph√©p nhi·ªÅu role
export const authorizeRoles = (roles: Array<'admin' | 'telesale'>) => {
  return (req: AuthRequest, res: Response, next: NextFunction): void => {
    if (!req.user || !roles.includes(req.user.role)) {
      res.status(403).json({ message: 'Quy·ªÅn truy c·∫≠p b·ªã t·ª´ ch·ªëi.' });
      return;
    }
    next();
  };
};